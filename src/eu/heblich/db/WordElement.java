package eu.heblich.db;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.Consumer;

import eu.heblich.db.annotation.Id;
import eu.heblich.db.annotation.StringSize;

public class WordElement {

	@Id(autogenerated = true)
	protected Integer id;
	@StringSize(100)
	protected String word;
	
	public WordElement() {
		super();
	}
	
	public WordElement(Integer id, String word) {
		super();
		this.id = id;
		setWord(word);
	}

	public WordElement(String word) {
		super();
		setWord(word);
	}



	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getWord() {
		return word.replace("''", "'");
	}

	public void setWord(String word) {
		word = word.replace("'", "''");
		this.word = word;
	}

	public static WordElement get(int id){
		return LocalDB.INSTANCE.get(WordElement.class, id);
	}
	
	public static void addOrUpdate(String word, int fileId){
		int elementId = containsWord(word);
		WordElement we;
		if(elementId == -1){
			we = new WordElement(word);
			LocalDB.INSTANCE.insert(we);
			we = getByWord(word);
		}else{
			we = get(elementId);
		}
		int wordFileId = WordFileConnector.containsWordFileCombination(we.getId(), fileId);
		if(wordFileId == -1){
			LocalDB.INSTANCE.insert(new WordFileConnector(fileId, we.getId()));
		}
		
	}
	
	public static WordElement getByWord(String s){
		int i = containsWord(s);
		if(i == -1)
			return null;
		else
			return get(i);
	}
	
	
	public static int containsWord(String s){
		s = s.replace("'", "''");
		String sql = "Select id from WordElement where word like '".concat(s).concat("'");
		final AtomicInteger succeeded = new AtomicInteger();
		
		LocalDB.INSTANCE.select(sql, new Consumer<ResultSet>() {
			
			@Override
			public void accept(ResultSet t) {
				try {
					while (t.next()) {
						succeeded.set(t.getInt(1));
						return;
					}
				} catch (SQLException e) {
					LocalDB.printSQLException(e);
				}
				succeeded.set(-1);
			}
		});
		return succeeded.get();
	}
}
