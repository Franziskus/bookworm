package eu.heblich.db;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.Consumer;

import eu.heblich.db.FileElement.Status;
import eu.heblich.db.annotation.Id;

public class WordFileConnector {

	@Id(autogenerated = true)
	protected Integer id;
	protected int fileId;
	protected int wordId;
	
	public WordFileConnector() {
		super();
	}
	public WordFileConnector(int fileId, int wordId) {
		super();
		this.fileId = fileId;
		this.wordId = wordId;
	}

	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public int getFileId() {
		return fileId;
	}
	public void setFileId(int fileId) {
		this.fileId = fileId;
	}
	public int getWordId() {
		return wordId;
	}
	public void setWordId(int wordId) {
		this.wordId = wordId;
	}
	@Override
	public String toString() {
		return "WordFileConnector [fileId=" + fileId + ", wordId=" + wordId + "]";
	}
	
	public static WordFileConnector get(int id){
		return LocalDB.INSTANCE.get(WordFileConnector.class, id);
	}
	
	private static List<Integer> getIdsWithWordId(int wordId){
		String sql = "Select id from WordFileConnector where wordId = ".concat(String.valueOf(wordId));
		final List<Integer> succeeded = new ArrayList<>();
		
		LocalDB.INSTANCE.select(sql, new Consumer<ResultSet>() {
			
			@Override
			public void accept(ResultSet t) {
				try {
					while (t.next()) {
						succeeded.add(t.getInt(1));
					}
				} catch (SQLException e) {
					LocalDB.printSQLException(e);
				}
			}
		});
		return succeeded;
	}
	
	public static int containsWordFileCombination(int wordId, int fileId){
		String sql = "Select id from WordFileConnector where wordId = ".concat(String.valueOf(wordId)).concat(" AND fileId = ".concat(String.valueOf(fileId)));
		final AtomicInteger succeeded = new AtomicInteger();
		
		LocalDB.INSTANCE.select(sql, new Consumer<ResultSet>() {
			
			@Override
			public void accept(ResultSet t) {
				try {
					while (t.next()) {
						succeeded.set(t.getInt(1));
						return;
					}
				} catch (SQLException e) {
					LocalDB.printSQLException(e);
				}
				succeeded.set(-1);
			}
		});
		//System.out.println("FileElement.containsFilename: "+succeeded.get());
		return succeeded.get();
	}
}
